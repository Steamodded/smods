[manifest]
version = "1.0.0"
dump_lua = true
priority = -10

# Select custom win quips
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''Jimbo = Card_Character({x = 0, y = 5})
local spot = G.OVERLAY_MENU:get_UIE_by_ID('jimbo_spot')
spot.config.object:remove()
spot.config.object = Jimbo
Jimbo.ui_object_updated = true
Jimbo:add_speech_bubble('wq_'..math.random(1,7), nil, {quip = true})'''
position = "at"
payload = '''
local quip, extra = SMODS.quip("win")
extra.x = 0
extra.y = 5
Jimbo = Card_Character(extra)
local spot = G.OVERLAY_MENU:get_UIE_by_ID('jimbo_spot')
spot.config.object:remove()
spot.config.object = Jimbo
Jimbo.ui_object_updated = true
Jimbo:add_speech_bubble(quip, nil, {quip = true})
'''
match_indent = true

# Select custom loss quips
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''Jimbo = Card_Character({x = 0, y = 5})
local spot = G.OVERLAY_MENU:get_UIE_by_ID('jimbo_spot')
spot.config.object:remove()
spot.config.object = Jimbo
Jimbo.ui_object_updated = true
Jimbo:add_speech_bubble('lq_'..math.random(1,10), nil, {quip = true})
'''
position = "at"
payload = '''
local quip, extra = SMODS.quip("loss")
extra.x = 0
extra.y = 5
Jimbo = Card_Character(extra)
local spot = G.OVERLAY_MENU:get_UIE_by_ID('jimbo_spot')
spot.config.object:remove()
spot.config.object = Jimbo
Jimbo.ui_object_updated = true
Jimbo:add_speech_bubble(quip, nil, {quip = true})
'''
match_indent = true

# Allow custom materialize colours
[[patches]]
[patches.pattern]
target = "card_character.lua"
pattern = '''self.children.card:start_materialize({G.C.BLUE, G.C.WHITE, G.C.RED})'''
position = "at"
payload = '''self.children.card:start_materialize({args.materialize_colours and args.materialize_colours[1] or G.C.BLUE, args.materialize_colours and args.materialize_colours[2] or G.C.WHITE, args.materialize_colours and args.materialize_colours[3] or G.C.RED})'''
match_indent = true

# Allow custom particle_colours
[[patches]]
[patches.pattern]
target = "card_character.lua"
pattern = '''colours = {G.C.RED, G.C.BLUE, G.C.ORANGE},'''
position = "at"
payload = '''colours = {args.particle_colours and args.particle_colours[1] or G.C.RED, args.particle_colours and args.particle_colours[2] or G.C.BLUE, args.particle_colours and args.particle_colours[3] or G.C.ORANGE},'''
match_indent = true

# Allow custom centers to be used for quips
[[patches]]
[patches.pattern]
target = 'card_character.lua'
match_indent = true
position = 'at'
pattern = '''
self.children.card = Card(self.T.x, self.T.y, G.CARD_W, G.CARD_H, G.P_CARDS.empty, args.center or G.P_CENTERS.j_joker, {bypass_discovery_center = true})
'''
payload = '''
self.children.card = Card(self.T.x, self.T.y, G.CARD_W, G.CARD_H, G.P_CARDS.empty, args.center and G.P_CENTERS[args.center] or G.P_CENTERS.j_joker, {bypass_discovery_center = true})
'''
